#### Types ####

=== Query ==

workloads(workload_conf_id, env_conf_id, repo_id, arch, list_all=False, output_change=None)
workloads_id(id, list_all=False, output_change=None)
workload_pkgs(workload_conf_id, env_conf_id, repo_id, arch, output_change=None)
workload_pkgs_id(id, output_change=None)
workload_size(workload_conf_id, env_conf_id, repo_id, arch)
workload_size_id(id)
workload_succeeded(workload_conf_id, env_conf_id, repo_id, arch)

envs(env_conf_id, repo_id, arch, list_all=False, output_change=None)
envs_id(id, list_all=False, output_change=None)
env_pkgs(env_conf_id, repo_id, arch)
env_pkgs_id(id)
env_size(self, env_conf_id, repo_id, arch)
env_size_id(id)
env_succeeded(env_conf_id, repo_id, arch)

workloads_in_view(view_conf_id, arch, maintainer=None)
arches_in_view(view_conf_id, maintainer=None)
pkgs_in_view(view_conf_id, arch, output_change=None, maintainer=None)
view_succeeded(view_conf_id, arch, maintainer=None)
view_unwanted_pkgs(view_conf_id, arch, maintainer=None)
view_maintainers(view_conf_id, arch)

url_slug_id(any_id)



=== Package ===

pkg_id:  {name}-{evr}.{arch}   <-- the arch must be there because of multilib


data["pkgs"][repo_id][arch][pkg_id]["id"]
data["pkgs"][repo_id][arch][pkg_id]["name"]
data["pkgs"][repo_id][arch][pkg_id]["evr"]
data["pkgs"][repo_id][arch][pkg_id]["arch"]
data["pkgs"][repo_id][arch][pkg_id]["installsize"]
data["pkgs"][repo_id][arch][pkg_id]["description"]
data["pkgs"][repo_id][arch][pkg_id]["summary"]
data["pkgs"][repo_id][arch][pkg_id]["source_name"]
data["pkgs"][repo_id][arch][pkg_id]["sourcerpm"]



=== Repository ===

repo_id: repo_id

configs["repos"][repo_id]["id"]
configs["repos"][repo_id]["name"]
configs["repos"][repo_id]["description"]
configs["repos"][repo_id]["maintainer"]
configs["repos"][repo_id]["source"]["fedora_release"]
configs["repos"][repo_id]["source"]["architectures"]


=== Environment ===

env_conf_id: env_conf_id
env_id:      env_conf_id:repo_id:arch

configs["envs"][env_conf_id]["id"]
configs["envs"][env_conf_id]["name"]
configs["envs"][env_conf_id]["description"]
configs["envs"][env_conf_id]["maintainer"]
configs["envs"][env_conf_id]["repositories"]
configs["envs"][env_conf_id]["packages"]
configs["envs"][env_conf_id]["labels"]
configs["envs"][env_conf_id]["arch_packages"][arch]
configs["envs"][env_conf_id]["options"]

data["envs"][env_id]["env_conf_id"]
data["envs"][env_id]["pkg_ids"]
data["envs"][env_id]["repo_id"]
data["envs"][env_id]["arch"]
data["envs"][env_id]["errors"]["non_existing_pkgs"]
data["envs"][env_id]["errors"]["message"]
data["envs"][env_id]["succeeded"]


=== Workload ===

workload_conf_id: workload_conf_id
workload_id:      workload_conf_id:env_conf_id:repo_id:arch
workload_id:      workload_conf_id:env_id

configs["workloads"][workload_conf_id]["id"]
configs["workloads"][workload_conf_id]["name"]
configs["workloads"][workload_conf_id]["description"]
configs["workloads"][workload_conf_id]["maintainer"]
configs["workloads"][workload_conf_id]["packages"]
configs["workloads"][workload_conf_id]["labels"]
configs["workloads"][workload_conf_id]["arch_packages"][arch]
configs["workloads"][workload_conf_id]["options"]

data["workloads"][workload_id]["workload_conf_id"]
data["workloads"][workload_id]["env_conf_id"]
data["workloads"][workload_id]["repo_id"]
data["workloads"][workload_id]["arch"]
data["workloads"][workload_id]["pkg_env_ids"]
data["workloads"][workload_id]["pkg_added_ids"]
data["workloads"][workload_id]["pkg_placeholder_names"]
data["workloads"][workload_id]["pkg_relations"]
data["workloads"][workload_id]["errors"]["non_existing_pkgs"]
data["workloads"][workload_id]["errors"]["message"]
data["workloads"][workload_id]["env_succeeded"]
data["workloads"][workload_id]["succeeded"]
data["workloads"][workload_id]["labels"]

data["workloads"][workload_id]["pkg_relations"][pkg_id] = {}
data["workloads"][workload_id]["pkg_relations"][pkg_id]["required_by"] = sorted(list(required_by))
data["workloads"][workload_id]["pkg_relations"][pkg_id]["recommended_by"] = sorted(list(recommended_by))
data["workloads"][workload_id]["pkg_relations"][pkg_id]["suggested_by"] = sorted(list(suggested_by))
data["workloads"][workload_id]["pkg_relations"][pkg_id]["source_name"] = pkg.source_name
data["workloads"][workload_id]["pkg_relations"][pkg_id]["reponame"] = pkg.reponame



=== Label ===

configs["labels"][label_id]["id"]
configs["labels"][label_id]["name"]
configs["labels"][label_id]["description"]
configs["labels"][label_id]["maintainer"]


=== View ===

view_conf_id:   view_conf_id
view_id:        view_conf_id:arch
pkg_id:         NEVRA    <-- the arch must be there because of multilib
srpm_id:        NEVR

configs["views"][view_conf_id]["id"]
configs["views"][view_conf_id]["name"]
configs["views"][view_conf_id]["description"]
configs["views"][view_conf_id]["maintainer"]
configs["views"][view_conf_id]["type"]
configs["views"][view_conf_id]["labels"]
configs["views"][view_conf_id]["repository"]
configs["views"][view_conf_id]["buildroot_strategy"]



data["views_all_arches"][view_conf_id]["id"]
data["views_all_arches"][view_conf_id]["workloads"][workload_conf_id]
data["views_all_arches"][view_conf_id]["pkgs_by_name"][pkg_name]
data["views_all_arches"][view_conf_id]["pkgs_by_nevr"][pkg_nevr]
data["views_all_arches"][view_conf_id]["source_pkgs_by_name"][srpm_name]


data["views_all_arches"][view_conf_id]["pkgs_by_name"][pkg_name]...
data["views_all_arches"][view_conf_id]["pkgs_by_nevr"][pkg_nevr]...
data["views_all_arches"][view_conf_id]["source_pkgs_by_name"][srpm_name]...
    ... ["name"]
    ... ["source_name"]  (not in in "source_pkgs_by_name")
    ... ["arches"]
    ... ["unwanted_completely_in_list_ids"]
    ... ["unwanted_buildroot_in_list_ids"]
    ... ["in_workload_ids_all"]
    ... ["in_workload_ids_req"]
    ... ["in_workload_ids_dep"]
    ... ["in_workload_ids_env"]
    ... ["in_buildroot_of_srpm_id_all"]
    ... ["in_buildroot_of_srpm_id_req"]
    ... ["in_buildroot_of_srpm_id_dep"]
    ... ["in_buildroot_of_srpm_id_env"]
    ... ["in_workload_conf_ids_all"]
    ... ["in_workload_conf_ids_req"]
    ... ["in_workload_conf_ids_dep"]
    ... ["in_workload_conf_ids_env"]
    ... ["in_buildroot_of_srpm_name_all"]
    ... ["in_buildroot_of_srpm_name_req"]
    ... ["in_buildroot_of_srpm_name_dep"]
    ... ["best_maintainers"]
    ... ["maintainer_recommendation"]

    ... ["maintainer_recommendation_details"][level][sublevel][maintainer]["reasons"] = set()
            ^^ (first_pkg_name, first_srpm_name, second_pkg_name)
                # first requires second
                # "reasons" is only in sublevel 1 and higher

    ... ["maintainer_recommendation_details"][level][sublevel][maintainer]["locations"] = set()
            ^^ workload_conf_id or srpm_name
    

data["views_all_arches"][view_conf_id]["pkgs_by_name"][pkg_name]...
data["views_all_arches"][view_conf_id]["pkgs_by_nevr"][pkg_nevr]...
    ... ["hard_dependency_of_pkg_nevrs"]
    ... ["hard_dependency_of_pkg_names"]
    ... ["weak_dependency_of_pkg_nevrs"]
    ... ["weak_dependency_of_pkg_names"]
    ... ["dependency_of_pkg_nevrs"]
    ... ["dependency_of_pkg_names"]





data["views"][view_id]["id"]
data["views"][view_id]["view_conf_id"]
data["views"][view_id]["arch"]
data["views"][view_id]["workload_ids"]
data["views"][view_id]["pkgs"]
data["views"][view_id]["source_pkgs"]


data["views"][view_id]["pkgs"][pkg_id][...]  <- everything from data["pkgs"][repo_id][arch][pkg_id]
data["views"][view_id]["pkgs"][pkg_id]["view_arch"]

data["views"][view_id]["pkgs"][pkg_id]["in_workload_ids_all"]  <--,
data["views"][view_id]["pkgs"][pkg_id]["in_workload_ids_req"]  <--=-- workload_ids
data["views"][view_id]["pkgs"][pkg_id]["in_workload_ids_dep"]  <--|
data["views"][view_id]["pkgs"][pkg_id]["in_workload_ids_env"]  <--'

data["views"][view_id]["pkgs"][pkg_id]["in_buildroot_of_srpm_id_all"]  <--,
data["views"][view_id]["pkgs"][pkg_id]["in_buildroot_of_srpm_id_req"]  <--=-- srpm_ids (buildroot)
data["views"][view_id]["pkgs"][pkg_id]["in_buildroot_of_srpm_id_dep"]  <--|
data["views"][view_id]["pkgs"][pkg_id]["in_buildroot_of_srpm_id_env"]  <--'

data["views"][view_id]["pkgs"][pkg_id]["unwanted_completely_in_list_ids"]  <--=--  unwanted_conf_ids
data["views"][view_id]["pkgs"][pkg_id]["unwanted_buildroot_in_list_ids"]   <--'

data["views"][view_id]["pkgs"][pkg_id]["level"][0]["all"]  <--,
data["views"][view_id]["pkgs"][pkg_id]["level"][0]["req"]  <--=-- level - 0  workload_ids
data["views"][view_id]["pkgs"][pkg_id]["level"][0]["dep"]  <--|         - 1+ srpm_ids (buildroot)
data["views"][view_id]["pkgs"][pkg_id]["level"][0]["env"]  <--'

data["views"][view_id]["pkgs"][pkg_id]["required_by"]        <--,
data["views"][view_id]["pkgs"][pkg_id]["recommended_by"]     <--=-- pkg_relations
data["views"][view_id]["pkgs"][pkg_id]["suggested_by"]       <--'

data["views"][view_id]["pkgs"][pkg_id]["unwanted_runtime_in"]    <--,
data["views"][view_id]["pkgs"][pkg_id]["unwanted_buildroot_in"]  <--=-- unwanted_ids


data["views"][view_id]["source_pkgs"][srpm_id]["id"]
data["views"][view_id]["source_pkgs"][srpm_id]["name"]
data["views"][view_id]["source_pkgs"][srpm_id]["reponame"]
data["views"][view_id]["source_pkgs"][srpm_id]["pkg_ids"]

data["views"][view_id]["source_pkgs"][srpm_id]["in_workload_ids_all"]  <--,
data["views"][view_id]["source_pkgs"][srpm_id]["in_workload_ids_req"]  <--=-- workload_ids
data["views"][view_id]["source_pkgs"][srpm_id]["in_workload_ids_dep"]  <--|
data["views"][view_id]["source_pkgs"][srpm_id]["in_workload_ids_env"]  <--'

data["views"][view_id]["source_pkgs"][srpm_id]["in_buildroot_of_srpm_id_all"]  <--,
data["views"][view_id]["source_pkgs"][srpm_id]["in_buildroot_of_srpm_id_req"]  <--=--  srpm_ids (buildroot)
data["views"][view_id]["source_pkgs"][srpm_id]["in_buildroot_of_srpm_id_dep"]  <--|
data["views"][view_id]["source_pkgs"][srpm_id]["in_buildroot_of_srpm_id_env"]  <--'

data["views"][view_id]["source_pkgs"][srpm_id]["unwanted_completely_in_list_ids"]  <--=--  unwanted_conf_ids
data["views"][view_id]["source_pkgs"][srpm_id]["unwanted_buildroot_in_list_ids"]   <--'

data["views"][view_id]["source_pkgs"][srpm_id]["level"][0]["all"]  <--,
data["views"][view_id]["source_pkgs"][srpm_id]["level"][0]["req"]  <--=-- level - 0  workload_ids
data["views"][view_id]["source_pkgs"][srpm_id]["level"][0]["dep"]  <--|         - 1+ srpm_ids (buildroot)
data["views"][view_id]["source_pkgs"][srpm_id]["level"][0]["env"]  <--'

data["views"][view_id]["source_pkgs"][srpm_id]["unwanted_runtime_in"]    <--,
data["views"][view_id]["source_pkgs"][srpm_id]["unwanted_buildroot_in"]  <--=-- unwanted_ids


=== Buildroot ===

# This stores the direct build dependencies of SRPMs
# This is then referenced from the "srpms" section

data["buildroot"]["koji_srpms"][koji_id][arch][srpm_id]["id"]
data["buildroot"]["koji_srpms"][koji_id][arch][srpm_id]["directly_required_pkg_names"]

# This contains fully resolved build dependencies of each SRPM
# This is very similar to workloads

data["buildroot"]["srpms"][repo_id][arch][srpm_id]["id"]
data["buildroot"]["srpms"][repo_id][arch][srpm_id]["directly_required_pkg_names"]  # like workload_conf/packages
data["buildroot"]["srpms"][repo_id][arch][srpm_id]["pkg_relations"]
data["buildroot"]["srpms"][repo_id][arch][srpm_id]["pkg_env_ids"]
data["buildroot"]["srpms"][repo_id][arch][srpm_id]["pkg_added_ids"]
data["buildroot"]["srpms"][repo_id][arch][srpm_id]["errors"]["non_existing_pkgs"]
data["buildroot"]["srpms"][repo_id][arch][srpm_id]["errors"]["message"]
data["buildroot"]["srpms"][repo_id][arch][srpm_id]["succeeded"]
data["buildroot"]["srpms"][repo_id][arch][srpm_id]["processed"]

# This is the build group for each repo and arch
# Using the workload analogy, these are environments

data["buildroot"]["build_groups"][repo_id][arch][...]  <-- everything from data["envs"][env_id]
data["buildroot"]["build_groups"][repo_id][arch]["generated_id"]


=== Unwanted ===

configs["unwanteds"][unwanted_conf_id]["id"]
configs["unwanteds"][unwanted_conf_id]["name"]
configs["unwanteds"][unwanted_conf_id]["description"]
configs["unwanteds"][unwanted_conf_id]["maintainer"]
configs["unwanteds"][unwanted_conf_id]["type"]
configs["unwanteds"][unwanted_conf_id]["labels"]
configs["unwanteds"][unwanted_conf_id]["unwanted_packages"]
configs["unwanteds"][unwanted_conf_id]["unwanted_arch_packages"][arch]

